#!/usr/bin/env python3.9
"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞
"""
import logging
import traceback
from telebot import types
from random import choice
import PyPDF2
from data_store import DataStore
from pdf_processor import process_pdf_text
from config import KRS_LIST, ADMIN_ID
import settings as s

logger = logging.getLogger(__name__)


class BotHandlers:
    def __init__(self, bot):
        self.bot = bot
        self.data_store = DataStore()
        self.setup_handlers()
    
    def setup_handlers(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π"""
        
        @self.bot.message_handler(commands=['start'])
        def handle_start(message):
            self.start_command(message)
        
        @self.bot.message_handler(content_types=['document'])
        def handle_document(message):
            self.document_handler(message)
        
        @self.bot.message_handler(func=lambda message: True)
        def handle_message(message):
            self.message_handler(message)
    
    def start_command(self, message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        try:
            user_id = message.from_user.id
            username = message.from_user.username or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
            
            welcome_messages = [
                f"–ü—Ä–∏–≤–µ—Ç, {username}! üëã\n–Ø –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ-—Å–ø—Ä–∞–≤–æ—á–Ω—ã–π –±–æ—Ç –¥–ª—è –±–æ—Ä—Ç–ø—Ä–æ–≤–æ–¥–Ω–∏–∫–æ–≤.",
                f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {username}! ‚úàÔ∏è\n–ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞–º –∏ —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞–º.",
                f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {username}! üìã\n–ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø–æ —Ä–∞–±–æ—Ç–µ –±–æ—Ä—Ç–ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞."
            ]
            
            response = choice(welcome_messages)
            self.bot.reply_to(message, response)
            
            logger.info(f"Start command from user {user_id} ({username})")
            
        except Exception as e:
            logger.error(f"Error in start command: {str(e)}")
            self.bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞.")
    
    def document_handler(self, message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
        try:
            user_id = message.from_user.id
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
            if user_id not in KRS_LIST and user_id != ADMIN_ID:
                self.bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.")
                return
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ —Ñ–∞–π–ª–∞
            if not message.document.file_name.lower().endswith('.pdf'):
                self.bot.reply_to(message, "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ PDF —Ñ–∞–π–ª—ã.")
                return
            
            self.bot.reply_to(message, "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –¥–æ–∫—É–º–µ–Ω—Ç... ‚è≥")
            
            # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
            file_info = self.bot.get_file(message.document.file_id)
            downloaded_file = self.bot.download_file(file_info.file_path)
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ PDF
            try:
                # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
                temp_filename = f"temp_{message.document.file_name}"
                with open(temp_filename, 'wb') as temp_file:
                    temp_file.write(downloaded_file)
                
                # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ PDF
                with open(temp_filename, 'rb') as pdf_file:
                    pdf_reader = PyPDF2.PdfReader(pdf_file)
                    text = ""
                    for page in pdf_reader.pages:
                        text += page.extract_text()
                
                # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                if process_pdf_text(text):
                    self.bot.reply_to(message, "‚úÖ –î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –∑–Ω–∞–Ω–∏–π!")
                else:
                    self.bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞.")
                
                # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
                import os
                os.remove(temp_filename)
                
            except Exception as pdf_error:
                logger.error(f"PDF processing error: {str(pdf_error)}")
                self.bot.reply_to(message, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ PDF —Ñ–∞–π–ª–∞.")
            
        except Exception as e:
            logger.error(f"Error in document handler: {str(e)}")
            self.bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞.")
    
    def message_handler(self, message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        try:
            user_id = message.from_user.id
            username = message.from_user.username or "Unknown"
            question = message.text
            
            logger.info(f"Question from {username} ({user_id}): {question}")
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ "–ø–µ—á–∞—Ç–∞–µ—Ç"
            self.bot.send_chat_action(message.chat.id, 'typing')
            
            # –ü–æ–∏—Å–∫ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞
            response = self.data_store.search_and_generate_response(question, user_id)
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞
            self.bot.reply_to(message, response)
            
        except Exception as e:
            logger.error(f"Error in message handler: {str(e)}")
            logger.error(f"Traceback: {traceback.format_exc()}")
            self.bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.")